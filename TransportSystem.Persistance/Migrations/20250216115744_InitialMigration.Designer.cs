// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TransportSystem.Persistance.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20250216115744_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Modelos.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Modelos.Motorista", b =>
                {
                    b.Property<int>("IdMotorista")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNH")
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ValidadeCNH")
                        .HasColumnType("TEXT");

                    b.HasKey("IdMotorista");

                    b.ToTable("Motoristas");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Modelos.Passageiro", b =>
                {
                    b.Property<int>("IdPassageiro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ViagemIdViagem")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdPassageiro");

                    b.HasIndex("ViagemIdViagem");

                    b.ToTable("Passageiros");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Modelos.Veiculo", b =>
                {
                    b.Property<int>("IdVeiculo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ano")
                        .HasColumnType("TEXT");

                    b.Property<string>("Capacidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Marca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .HasColumnType("TEXT");

                    b.HasKey("IdVeiculo");

                    b.ToTable("Veiculos");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Modelos.Viagem", b =>
                {
                    b.Property<int>("IdViagem")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataHoraChegada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataHoraPartida")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MotoristaIdMotorista")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VeiculoIdVeiculo")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdViagem");

                    b.HasIndex("MotoristaIdMotorista");

                    b.HasIndex("VeiculoIdVeiculo");

                    b.ToTable("Viagens");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Modelos.Passageiro", b =>
                {
                    b.HasOne("Modelos.Viagem", null)
                        .WithMany("Passageiros")
                        .HasForeignKey("ViagemIdViagem");
                });

            modelBuilder.Entity("Modelos.Viagem", b =>
                {
                    b.HasOne("Modelos.Motorista", "Motorista")
                        .WithMany()
                        .HasForeignKey("MotoristaIdMotorista");

                    b.HasOne("Modelos.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("VeiculoIdVeiculo");

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Modelos.Viagem", b =>
                {
                    b.Navigation("Passageiros");
                });
#pragma warning restore 612, 618
        }
    }
}
